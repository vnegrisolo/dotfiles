alias l='ls -lah';
alias grep='grep --color';
alias open_file_system_to_web='ifconfig | grep 192.168; python -m SimpleHTTPServer 8998;';
alias versions_db='
  echo "\e[36minitdb \e[0m=> $(initdb --version)"
  echo "\e[36mpsql \e[0m=> $(psql --version)"
  echo "\e[36mpostgres \e[0m=> $(postgres --version)"
';
alias versions_git='
  echo "\e[36mgit \e[0m=> $(git --version)"
';
alias versions_js='
  echo "\e[36mnode \e[0m=> $(node -v)"
  echo "\e[36mnpm \e[0m=> $(npm -v)"
';
alias versions_ruby='
  echo "\e[36mruby \e[0m=> $(ruby -v)"
  echo "\e[36mgem \e[0m=> $(gem -v)"
  echo "\e[36mbundle\e[0m=> $(bundler -v)"
  echo "\e[36mrake \e[0m=> $(rake --version)"
  echo "\e[36mrails \e[0m=> $(rails -v)"
';
alias versions_elixir='
  echo "\e[36merl \e[0m=> $(erl -version)"
  echo "\e[36miex \e[0m=> $(iex --version)"
  echo "\e[36mmix \e[0m=> $(mix --version)"
  echo "\e[36melixir \e[0m=> $(elixir -v)"
  echo "\e[36mphoenix \e[0m=> $(mix phx.new -v)"
';
alias versions='versions_db; versions_git; versions_js; versions_ruby; versions_elixir';

alias be='bundle exec';
alias berm='bundle exec rake db:migrate db:migrate:redo db:test:prepare'
alias cuco='cucumber | egrep "^[Given|When|Then]" | pbcopy';

gref() {
  command git --no-pager diff --cached --stat | command grep "|\s*0$" | awk '{system("command git reset " $1)}'
}
gbcc() {
  branches=(`gb`)
  for i in $branches; do
    if [[ $i =~ ^(\\*|master)$ ]]; then
      echo ""
    else
      echo "=> ${i}";
      git rev-list --left-right --count master...${i}
    fi
  done
}
gstatistics() {
  after="${1:-99 months ago}"
  before="${2:-0 days ago}"

  git shortlog -sen --no-merges | cat | awk '{ $1 = ""; printf "%s\n", $0 }' | while read -r author; do
    echo "=> Author = \033[0;36m'$author'\033[0m"
    commits_count=$(git log --no-merges --author="$author" --after="$after" --before="$before" --pretty=format:'%h' | cat | wc -l | tr -d '[:space:]')
    printf "  Commits: %7s\n" "${commits_count}"
    git log --no-merges --author="$author" --after="$after" --before="$before" --pretty=tformat: --numstat | awk '{inserted+=$1; deleted+=$2;} END {printf "  Added:   %7s\n  Removed: %7s\n", inserted, deleted }'
  done
}

print_all_colors() {
  for bg in {40..47} {100..107} 49; do
    for clfg in {30..37} {90..97} 39; do
      for attr in 0 1 2 4 5 7; do
        echo -en "\033[${attr};${bg};${clfg}m[${attr};${bg};${clfg}m\033[0m  "
      done
      echo ""
    done
  done
}

alias gap='git add -p'
alias gnap='git add -N --ignore-removal . && gap && gref'
alias gb='git branch'
alias gc='git commit -v'
alias gco='git checkout'
alias gd='git diff'
alias gdc='git diff --cached'
alias glp='git log -p'
alias glg='git log --graph --oneline --decorate --color --all'
alias glod='git log --oneline --decorate'
alias gp='git push'
alias gplease='git push --force-with-lease'
alias gpr='git pull --rebase'
alias gprm='gpr; git fetch -p; echo "merged with master:"; git branch --merged master'
alias gprmd='gpr; git fetch -p; echo "merged with develop:"; git branch --merged develop'
alias gst='git status'
alias reset-authors='git commit --amend --reset-author -C HEAD'
alias gcf='(gd --name-only; gdc --name-only; gd --name-only ..master; git ls-files --others --exclude-standard) | sort -u'
alias gcfd='(gd --name-only; gdc --name-only; gd --name-only ..develop; git ls-files --others --exclude-standard) | sort -u'

alias cdv="cd ~/vfn/projects/vnegrisolo/"

alias dps='docker ps'
alias dload='eval $(docker-machine env default)'
alias dstart='docker-machine start && docker-machine ip default && dload'
alias dstop='docker-machine stop'
alias dlsm='echo "#=> \e[33mMACHINES\e[0m\n`docker-machine ls`"'
alias dlsn='echo "#=> \e[33mNETWORK\e[0m\n`docker network ls`"'
alias dlsv='echo "#=> \e[33mVOLUMES\e[0m\n`docker volume ls`"'
alias dlsi='echo "#=> \e[33mIMAGES\e[0m\n`docker images -a`"'
alias dlsc='echo "#=> \e[33mCONTAINERS\e[0m\n`docker ps -a`"'
alias dls='dlsm; dlsn; dlsv; dlsi; dlsc'
alias dclear='docker rm $(docker ps -a -q) && docker rmi $(docker images -q) && docker volume rm $(docker volume ls -q)'

alias vim-update='cd ~/.vim/bundle/; for i in *; do; echo "UPDATING => \e[0;36m${i}\e[0m"; cd $i; gpr; cd ..; done'
alias vim-install='mkdir -p ~/.vim/bundle/; cd ~/.vim/bundle/; for i in $(cat ~/.vimbundle); do; if [[ ! -e ${i#*/} ]]; then; echo "INSTALLING => \e[0;36m${i}\e[0m"; $(git clone https://github.com/${i}.git); fi; done'

alias mux='_d=${PWD##*/}; _d=${_d//\./-}; echo $_d; tmux new -d -s $_d; tmux split-window -h; tmux split-window -v; tmux a'

alias chrome='open -a "Google Chrome"'
alias t='task'

pdf_listen() {
  f=/tmp/pdf_listen.txt
  pdftotext $1 $f
  say -f $f
}
